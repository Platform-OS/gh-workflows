name: Capture base screenshots

on:
  workflow_call:
    inputs:
      base-branch-for-capturing:
        required: true
        type: string
      docker-image-for-capture:
        description: 'Docker image to be used when capturing screenshots'
        required: true
        type: string

jobs:
  reserve-ci-instance:
    runs-on: ubuntu-latest
    container: alpine:3.15
    outputs:
      mpkit-url: ${{ steps.reserve.outputs.mpkit-url }}
      report-path: ${{ steps.reserve.outputs.report-path }}
    steps:
      - name: Get ci-instance-url
        id: reserve
        uses: Platform-OS/ci-repository-reserve-instance-url@0.0.9
        with:
          repository-url: https://ci-repository.staging.oregon.platform-os.com
          method: reserve
          pos-ci-repo-token: ${{ secrets.POS_CI_REPO_ACCESS_TOKEN }}

  deploy:
    needs: ["reserve-ci-instance"]
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    container: alpine:3.15
    env:
      MPKIT_EMAIL: ${{ secrets.MPKIT_EMAIL }}
      MPKIT_TOKEN: ${{ secrets.MPKIT_TOKEN }}
      MPKIT_URL: ${{ needs.reserve-ci-instance.outputs.mpkit-url }}
      CI: false
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      DEBUG: 1
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build
        shell: sh
        run: |
          set -eu
          npm install
          npm run build

      - name: Seed
        shell: sh
        run: |
         set -e
         sh seed/seed.sh

  capture:
    needs: ["reserve-ci-instance", "deploy"]
    runs-on: ubuntu-latest
    container: ${{ inputs.docker-image-for-capture }}
    timeout-minutes: 35
    strategy:
      max-parallel: 1
      matrix:
        resolution: ["desktop", "mobile"]
    env:
      MPKIT_EMAIL: ${{ secrets.MPKIT_EMAIL }}
      MPKIT_TOKEN: ${{ secrets.MPKIT_TOKEN }}
      MPKIT_URL: ${{ needs.reserve-ci-instance.outputs.mpkit-url }}
      CI: true
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: Platform-OS/gh-action-run-tc-blink-diff-capture-base-snapshots@gh-artifacts
        name: Capture base screenshots for ${{ matrix.resolution }} resolution
        if: success() || failure()
        with:
          base: ${{ inputs.base-branch-for-capturing }}
          resolution: ${{ matrix.resolution }}
          test-name: tc-${{ matrix.resolution }}-snapshots-capture

  cleanup:
    if: ${{ always() }}
    needs: ["reserve-ci-instance", "deploy", "capture"]
    runs-on: ubuntu-latest
    container: alpine:3.15
    steps:
      - name: release ci-instance-url
        uses: Platform-OS/ci-repository-reserve-instance-url@0.0.9
        with:
          method: release
          repository-url: https://ci-repository.staging.oregon.platform-os.com
          pos-ci-repo-token: ${{ secrets.POS_CI_REPO_ACCESS_TOKEN }}
